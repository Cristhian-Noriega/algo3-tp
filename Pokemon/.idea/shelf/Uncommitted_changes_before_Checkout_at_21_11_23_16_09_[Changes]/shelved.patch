Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>tp1.clases</groupId>\n    <artifactId>Pokemon</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>17</maven.compiler.source>\n        <maven.compiler.target>17</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.jline</groupId>\n            <artifactId>jline</artifactId>\n            <version>3.23.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter</artifactId>\n            <version>5.8.2</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>5.4.0</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-core</artifactId>\n            <version>2.12.4</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-annotations</artifactId>\n            <version>2.12.4</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.12.7.1</version>\n        </dependency>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-controls</artifactId>\n            <version>17.0.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-fxml</artifactId>\n            <version>17.0.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.controlsfx</groupId>\n            <artifactId>controlsfx</artifactId>\n            <version>11.1.1</version>\n        </dependency>\n\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>2.22.2</version>\n            </plugin>\n        </plugins>\n    </build>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -71,6 +71,31 @@
                 <artifactId>maven-surefire-plugin</artifactId>
                 <version>2.22.2</version>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-clean-plugin</artifactId>
+                <version>3.1.0</version>
+            </plugin>
+            <plugin>
+                <groupId>org.openjfx</groupId>
+                <artifactId>javafx-maven-plugin</artifactId>
+                <version>0.0.8</version>
+                <executions>
+                    <execution>
+                        <!-- Default configuration for running with: mvn clean javafx:run -->
+                        <id>default-cli</id>
+                        <configuration>
+                            <mainClass>tp1.clases/tp1.clases.MainJavaFX</mainClass>
+                            <launcher>app</launcher>
+                            <jlinkZipName>app</jlinkZipName>
+                            <jlinkImageName>app</jlinkImageName>
+                            <noManPages>true</noManPages>
+                            <stripDebug>true</stripDebug>
+                            <noHeaderFiles>true</noHeaderFiles>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
         </plugins>
     </build>
 </project>
\ No newline at end of file
Index: src/main/java/tp1/clases/vista/PantallaInicialVista.java
===================================================================
diff --git a/src/main/java/tp1/clases/vista/PantallaInicialVista.java b/src/main/java/tp1/clases/vista/PantallaInicialVista.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/tp1/clases/vista/PantallaInicialVista.java	
@@ -0,0 +1,5 @@
+package tp1.clases.vista;
+
+public class PantallaInicialVista {
+
+}
Index: src/main/java/tp1/clases/MainJavaFX.java
===================================================================
diff --git a/src/main/java/tp1/clases/MainJavaFX.java b/src/main/java/tp1/clases/MainJavaFX.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/tp1/clases/MainJavaFX.java	
@@ -0,0 +1,37 @@
+package tp1.clases;
+
+import javafx.application.Application;
+import javafx.collections.FXCollections;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+import javafx.scene.layout.BorderPane;
+import javafx.scene.layout.StackPane;
+import javafx.scene.text.Font;
+import javafx.stage.Stage;
+import tp1.clases.controlador.*;
+import tp1.clases.modelo.*;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+
+public class MainJavaFX extends Application {
+
+    @Override
+    public void start(Stage stage) throws IOException {
+        FXMLLoader fxmlLoader = new FXMLLoader(MainJavaFX.class.getResource("resources/hello-view.fxml"));
+        Parent root = fxmlLoader.load();
+        Scene scene = new Scene(fxmlLoader.load(), 320, 240);
+        stage.setTitle("Hello!");
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public static void main(String []args) {
+        launch();
+    }
+}
\ No newline at end of file
Index: resources/hello-view.fxml
===================================================================
diff --git a/resources/hello-view.fxml b/resources/hello-view.fxml
new file mode 100644
--- /dev/null	
+++ b/resources/hello-view.fxml	
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+
+
+<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/17.0.2-ea" xmlns:fx="http://javafx.com/fxml/1">
+   <children>
+      <Button layoutX="274.0" layoutY="260.0" mnemonicParsing="false" text="Jugar" textOverrun="CENTER_ELLIPSIS" />
+   </children>
+</Pane>
Index: src/main/java/tp1/clases/controlador/ControladorPantallaInicial.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tp1.clases.controlador;\n\npublic class ControladorPantallaInicial {\n}\n
===================================================================
diff --git a/src/main/java/tp1/clases/controlador/ControladorPantallaInicial.java b/src/main/java/tp1/clases/controlador/ControladorPantallaInicial.java
--- a/src/main/java/tp1/clases/controlador/ControladorPantallaInicial.java	
+++ b/src/main/java/tp1/clases/controlador/ControladorPantallaInicial.java	
@@ -1,4 +1,14 @@
 package tp1.clases.controlador;
 
+import javafx.fxml.FXML;
+import javafx.scene.control.Label;
+
 public class ControladorPantallaInicial {
+    @FXML
+    private Label welcomeText;
+
+    @FXML
+    protected void onHelloButtonClick() {
+        welcomeText.setText("Welcome to JavaFX Application!");
+    }
 }
Index: src/main/java/tp1/clases/Finalizador.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tp1.clases;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport tp1.clases.modelo.Jugador;\nimport tp1.clases.modelo.ResultadosJugador;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.time.LocalTime;\nimport java.time.ZoneId;\nimport java.time.format.DateTimeFormatter;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Finalizador {\n\n    private final Jugador ganador;\n    private final Jugador perdedor;\n\n    public Finalizador(Jugador ganador, Jugador perdedor){\n            this.ganador = ganador;\n            this.perdedor = perdedor;\n    }\n\n    public void crearJsonPartida() throws IOException {\n        ResultadosJugador resultadosGanador = new ResultadosJugador(this.ganador.getNombre(), true, this.ganador.getMapCantidadItems(), this.ganador.getListaPokemones());\n        ResultadosJugador resultadosPerdedor = new ResultadosJugador(this.perdedor.getNombre(), false, this.perdedor.getMapCantidadItems(), this.perdedor.getListaPokemones());\n        ArrayList<ResultadosJugador> resultados = new ArrayList<>();\n        resultados.add(resultadosGanador);\n        resultados.add(resultadosPerdedor);\n\n        String path = \"resultados/informe\" + horaActual() + \".json\";\n        ObjectMapper objectMapper = new ObjectMapper();\n        // Serializacion\n        objectMapper.writeValue(new File(path), resultados);\n\n    }\n\n    private static String horaActual(){\n        String timeZoneId = \"America/Argentina/Buenos_Aires\";\n        ZoneId zoneId = ZoneId.of(timeZoneId);\n        LocalTime currentTime = LocalTime.now(zoneId);\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH_mm_ss\");\n        String formattedTime = currentTime.format(formatter);\n\n        return formattedTime;\n    }\n}\n
===================================================================
diff --git a/src/main/java/tp1/clases/Finalizador.java b/src/main/java/tp1/clases/Finalizador.java
--- a/src/main/java/tp1/clases/Finalizador.java	
+++ b/src/main/java/tp1/clases/Finalizador.java	
@@ -10,7 +10,6 @@
 import java.time.ZoneId;
 import java.time.format.DateTimeFormatter;
 import java.util.ArrayList;
-import java.util.List;
 
 public class Finalizador {
 
